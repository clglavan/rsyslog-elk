#  /etc/rsyslog.conf	Configuration file for rsyslog.
#
#			For more information see
#			/usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf

$MaxMessageSize 512k

#################
#### MODULES ####
#################

module(load="imuxsock") # provides support for local system logging
module(load="immark")  # provides --MARK-- message capability

# provides UDP syslog reception
#module(load="imudp")
#input(type="imudp" port="514")

# provides TCP syslog reception
module(load="imptcp")
input(type="imptcp" port="514")

$InputPTCPServerKeepAlive on
#module(load="omhttp")

module(load="mmjsonparse")

# provides elasticsearch support
module(load="omelasticsearch")

# provides kernel logging support and enable non-kernel klog messages
# module(load="imklog" permitnonkernelfacility="on")

###########################
#### GLOBAL DIRECTIVES ####
###########################

global(parser.escapeControlCharactersOnReceive="off" )

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Filter duplicated messages
$RepeatedMsgReduction on


#
# Where to place spool and state files
#
$WorkDirectory /var/spool/rsyslog

#
# Include all config files in /etc/rsyslog.d/
#


###### QUEUE STATS #########
module(load="impstats"
       format="cee"
       interval="10"
       severity="7"
       )

template(name="queue-stats"
  type="list") {
    constant(value="{")
      property(name="timereported" dateFormat="rfc3339" format="jsonf" outname="@timestamp")  # the timestamp
    constant(value=",")
      property(name="hostname" format="jsonf" outname="host")  # the host generating stats
    constant(value=",\"source\":\"impstats\",")                # we'll hardcode "impstats" as a source
      property(name="$!all-json" controlcharacters="space" position.from="2")            # finally, we'll add all metrics
      
  }
template(name="queueStatsIndex-template" type="string" string="queue-stats-%$year%%$month%%$day%")

if $syslogtag contains 'rsyslogd-pstats' then {
    action(
                name="parse_impstats"        # parse the
                type="mmjsonparse"           # JSON stats
                )   

    action(type="omfile" File="/var/log/test.log")

       action(type="omelasticsearch"
                name="queue-stats-queue"
                server="es01"
                serverport="9200"
                template="queue-stats"
                dynSearchIndex="on"
                searchIndex="queueStatsIndex-template"
                bulkmode="on"
                maxbytes="100m"
                action.resumeRetryCount="-1" #eternal
                action.resumeInterval="300" #5min
                action.resumeIntervalMax="43200" #12h
                queue.type="linkedlist"
                queue.workerThreads="4"
                queue.size="100000"
                queue.dequeuebatchsize="4096"
                queue.workerThreadMinimumMessages="10000"
                queue.minDequeueBatchSize="1" #the minimum number of messages to send if not fill$
                queue.minDequeueBatchSize.timeout="60000" #miliseconds to wait for new messages before send
                queue.fileName="queue_stats_disk"
                queue.maxDiskSpace="1g"
                queue.saveOnShutdown="on"
                errorfile="/var/log/queue_stats_omelasticsearch_error.log"
                ) stop
}
###########################

###### TEST QUEUE #########

template(name="messageToES" type="list" option.json="on") {
    constant(value="{")
    constant(value="\"@timestamp\":\"")            property(name="timereported" date.inUTC="on" dateFormat="year") constant(value="-")
                                                    property(name="timereported" date.inUTC="on" dateFormat="month") constant(value="-")
                                                    property(name="timereported" date.inUTC="on" dateFormat="day") constant(value=" ")
                                                    property(name="timereported" date.inUTC="on" dateFormat="hour") constant(value=":")
                                                    property(name="timereported" date.inUTC="on" dateFormat="minute") constant(value=":")
                                                    property(name="timereported" date.inUTC="on" dateFormat="second")
    constant(value="\",\"host\":\"")              property(name="hostname")
    constant(value="\",\"large-field\":\"")              property(name="$msg")
    constant(value="\"}")
    constant(value="\n") 
}
template(name="messageIndex-template" type="string" string="test-nginx-%$year%%$month%%$day%")

# action(type="mmjsonparse" cookie="")

# if $parsesuccess == "OK" then {

action(type="omfile" File="/var/log/file_debug.log")

action(type="omelasticsearch"
    name="test_queue_rsyslog"
    server="es01"
    serverport="9200"
    template="messageToES"
    dynSearchIndex="on"
    searchIndex="messageIndex-template"
    bulkmode="on"
    maxbytes="100m"
    action.resumeRetryCount="-1" #eternal
    action.resumeInterval="300" #5min
    action.resumeIntervalMax="43200" #12h
    queue.type="linkedlist"
    queue.workerThreads="8"
    queue.size="250000"
    queue.dequeuebatchsize="4096"
    queue.workerThreadMinimumMessages="60000"
    queue.fileName="test_queue_disk"
    queue.maxDiskSpace="1g"
    queue.saveOnShutdown="on"
    errorfile="/var/log/test_queue_omelasticsearch_error.log"
    ) stop
# } else {
#     action(type="omfile" File="/var/log/test_queue_parse_failed.log") stop
# }

###########################


$IncludeConfig /etc/rsyslog.d/*.conf
 